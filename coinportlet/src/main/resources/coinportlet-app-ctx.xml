<?xml version="1.0" encoding="UTF-8"?>
<beans	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:task="http://www.springframework.org/schema/task"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jaxrs="http://cxf.apache.org/jaxrs"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.1.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://cxf.apache.org/jaxrs 
			http://cxf.apache.org/schemas/jaxrs.xsd">
	<!-- Lets enable autowiring -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    
    <!-- Properties and messages beans -->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
    	<property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
        	<list>
        		<value>environmentProperties</value><!-- system properties will override the ones in the property files -->
        		<value>classpath:coinportlet-constants.properties</value>
        		<value>classpath:coinportlet-constants-override.properties</value>
        	</list>
        </property>
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="coinportlet-messages"/>
    </bean>
    
	<!-- Default View Resolver -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- Global form validation utility -->
    <bean id="globalValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    
    <!-- Portlet multipart resolver for file upload support -->
    <bean id="portletMultipartResolver"
        class="org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver"/>
    
	<!-- Default ExceptionHandler -->
    <bean id="defaultExceptionHandler" class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="fatal/error"/>
    </bean>
    
    <!-- Utility beans -->
    <bean class="pl.cyfronet.coin.portlet.util.ContextIdFactory">
    	<constructor-arg value="${cloud.context.id.prefix}"/>
    </bean>
    <bean class="pl.cyfronet.coin.portlet.portal.Portal"/>
    
    <!-- Mock definitions -->
    <!-- <bean class="pl.cyfronet.coin.portlet.mock.MockCloudFacade">
    	<constructor-arg value="${initial.number.of.mock.atomic.service.instances}"/>
    	<constructor-arg value="${initial.number.of.mock.atomic.services}"/>
    </bean> -->
    
    <!-- Cloud Facade beans -->
    <bean class="pl.cyfronet.coin.portlet.util.ClientFactory">
    	<property name="workflowManagement" ref="wm-client"/>
    	<property name="cloudFacade" ref="cf-client"/>
    	<property name="keyManagement" ref="km-client"/>
    	<property name="securityPolicyService" ref="sps-client"/>
    </bean>
    <jaxrs:client id="wm-client" address="${cloud.facade.wm.url}"
			serviceClass="pl.cyfronet.coin.api.WorkflowManagement"
			threadSafe="true"
			inheritHeaders="true">
		<jaxrs:providers>
			<ref bean="jsonProvider" />
			<ref bean="workflowServiceExceptionMapper" />
		</jaxrs:providers>
	</jaxrs:client>
	<jaxrs:client id="cf-client" address="${cloud.facade.cf.url}"
			serviceClass="pl.cyfronet.coin.api.CloudFacade"
			threadSafe="true"
			inheritHeaders="true">
		<jaxrs:providers>
			<ref bean="jsonProvider" />
			<ref bean="atomicServiceExceptionMapper" />
		</jaxrs:providers>
	</jaxrs:client>
	<jaxrs:client id="km-client" address="${cloud.facade.km.url}"
			serviceClass="pl.cyfronet.coin.api.KeyManagement"
			threadSafe="true"
			inheritHeaders="true">
		<jaxrs:providers>
			<ref bean="jsonProvider" />
			<ref bean="keyServiceExceptionMapper" />
		</jaxrs:providers>		
	</jaxrs:client>
	<jaxrs:client id="sps-client" address="${cloud.facade.sps.url}"
			serviceClass="pl.cyfronet.coin.api.SecurityPolicyService"
			threadSafe="true"
			inheritHeaders="true">
		<jaxrs:providers>
			<ref bean="jsonProvider" />
		</jaxrs:providers>		
	</jaxrs:client>
	<bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
	<bean id="atomicServiceExceptionMapper" class="pl.cyfronet.coin.api.exception.mapper.AtomicServiceExceptionMapper" />
	<bean id="workflowServiceExceptionMapper" class="pl.cyfronet.coin.api.exception.mapper.WorkflowServiceExceptionMapper" />
	<bean id="keyServiceExceptionMapper" class="pl.cyfronet.coin.api.exception.mapper.KeyServiceExceptionMapper" />
	
	<!-- Token service beans -->
	<jaxrs:client id="validatetkt-client" address="${ticket.validation.service.url.base}"		
			serviceClass="pl.cyfronet.coin.auth.MasterInterfaceAuthClient"
			inheritHeaders="true">
		<jaxrs:providers>
			<ref bean="jsonProvider" />
		</jaxrs:providers>
	</jaxrs:client>
	
	<!-- LOBCDER beans -->
	<bean class="pl.cyfronet.coin.portlet.lobcder.LobcderClient" init-method="initialize">
		<property name="baseUrl" value="${lobcder.url}"/>
		<property name="username" value="${lobcder.user}"/>
		<property name="password" value="${lobcder.password}"/>
	</bean>
</beans>