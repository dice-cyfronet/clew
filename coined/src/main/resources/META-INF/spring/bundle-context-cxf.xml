<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2011 ACC CYFRONET AGH Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring-2.0.0.xsd
       http://camel.apache.org/schema/cxf 
       http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
       http://www.springframework.org/schema/osgi-compendium 
       http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd
       http://cxf.apache.org/jaxrs 
       http://cxf.apache.org/schemas/jaxrs.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       ">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/osgi/cxf-extension-osgi.xml" />

	<osgix:cm-properties id="coin-properties"
		persistent-id="pl.cyfronet.coins">
		<prop key="port">9099</prop>
		<prop key="username"></prop>
		<prop key="password"></prop>

		<prop key="air.url"></prop>
		<prop key="air.username"></prop>
		<prop key="air.password"></prop>

		<prop key="secret"></prop>
	</osgix:cm-properties>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="propertiesArray">
			<ref bean="coin-properties" />
		</property>
	</bean>

	<bean name="wsCloudManager-test" class="pl.cyfronet.coin.impl.CloudFacadeImpl">
		<property name="manager" ref="dummyCloudManager" />
		<property name="authenticator" ref="authenticationHandler" />
	</bean>

	<bean name="wsCloudManager" class="pl.cyfronet.coin.impl.CloudFacadeImpl">
		<property name="manager" ref="cloudManager" />
		<property name="authenticator" ref="authenticationHandler" />
	</bean>

	<bean name="workflow-management" class="pl.cyfronet.coin.impl.WorkflowManagementImpl">
		<property name="manager" ref="cloudManager" />
		<property name="authenticator" ref="authenticationHandler" />
	</bean>


	<jaxrs:server id="workflow-management-rs" address="http://0.0.0.0:${port}/workflow">
		<jaxrs:serviceBeans>
			<ref bean="workflow-management" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref bean="jaxbProvider" />
			<ref bean="jsonProvider" />
			<ref bean="authenticationInterceptor" />
		</jaxrs:providers>
	</jaxrs:server>

	<jaxrs:server id="coinRSEndpoint" address="http://0.0.0.0:${port}">
		<jaxrs:serviceBeans>
			<ref bean="wsCloudManager" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<ref bean="jaxbProvider" />
			<ref bean="jsonProvider" />
			<ref bean="authenticationInterceptor" />
		</jaxrs:providers>
	</jaxrs:server>

	<jaxrs:client id="air-client" address="${air.url}"
		username="${air.username}" password="${air.password}"
		serviceClass="pl.cyfronet.coin.impl.air.client.AirClient"
		inheritHeaders="true">
		<jaxrs:providers>
			<ref bean="air-jsonProvider" />
		</jaxrs:providers>
	</jaxrs:client>

	<bean id="air-jsonProvider" class="pl.cyfronet.coin.impl.provider.ListAwareJsonProvider">
		<property name="serializeAsArray" value="true" />
		<property name="dropRootElement" value="true" />
		<property name="supportUnwrapped" value="true" />
		<property name="collectionWrapperMap">
			<map>
				<entry>
					<key>
						<value>pl.cyfronet.coin.impl.air.client.WorkflowDetail</value>
					</key>
					<value>workflowDetail</value>
				</entry>
				<entry>
					<key>
						<value>pl.cyfronet.coin.impl.air.client.ApplianceType</value>
					</key>
					<value>applianceType</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="jaxbProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">

	</bean>

	<bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.JSONProvider">
		<property name="namespaceMap" ref="jsonNamespaceMap" />
		<property name="serializeAsArray" value="true" />
		<property name="dropRootElement" value="true" />
		<property name="supportUnwrapped" value="true" />
		<property name="wrapperMap">
			<map>
				<entry>
					<key>
						<value>pl.cyfronet.coin.api.beans.WorkflowStartRequest</value>
					</key>
					<value>workflowStartRequest</value>
				</entry>
			</map>
		</property>
	</bean>

	<util:map id="jsonNamespaceMap" map-class="java.util.Hashtable">
	</util:map>
	
	<!-- security -->
	<bean id="authenticationInterceptor"
		class="pl.cyfronet.coin.impl.security.BasicRsAuthenticationHandler">
		<property name="authenticator" ref="authenticationHandler" />
	</bean>

	<bean id="authenticationHandler"
		class="pl.cyfronet.coin.impl.security.mi.MasterInterfaceAuthenticationHandler">
		<property name="ipAddress" value="0.0.0.0" />
		<property name="modAuthTkt">
			<bean class="pl.cyfronet.coin.impl.security.mi.ModAuthTkt">
				<property name="secret" value="${secret}" />
			</bean>
		</property>
	</bean>

<!-- 
	<bean id="authenticationHandler" class="pl.cyfronet.coin.impl.security.AuthenticationHandler">
		<property name="users">
			<map>
				<entry>
					<key>
						<value>${username}</value>
					</key>
					<value>${password}</value>
				</entry>
			</map>
		</property>
	</bean>
 -->
</beans>